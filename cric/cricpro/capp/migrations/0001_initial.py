# Generated by Django 5.1.2 on 2025-07-17 03:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("position", models.IntegerField(default=0)),
                ("is_captain", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["position"],
                "unique_together": {("user", "position")},
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("generation_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("members", models.ManyToManyField(blank=True, to="capp.member")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("total_overs", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "single_batting",
                    models.BooleanField(
                        default=False,
                        help_text="When enabled, innings ends only when no batters remain",
                        verbose_name="Single Batting Mode",
                    ),
                ),
                ("completed", models.BooleanField(default=False)),
                ("teams", models.ManyToManyField(to="capp.team")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_overs", models.PositiveIntegerField()),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("current_innings", models.IntegerField(default=1)),
                ("completed", models.BooleanField(default=False)),
                ("team1_score", models.PositiveIntegerField(default=0)),
                ("team2_score", models.PositiveIntegerField(default=0)),
                (
                    "single_batting",
                    models.BooleanField(
                        default=False,
                        help_text="When enabled, innings ends only when no batters remain",
                        verbose_name="Single Batting Mode",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team1_matches",
                        to="capp.team",
                    ),
                ),
                (
                    "team2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team2_matches",
                        to="capp.team",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="matches_won",
                        to="capp.team",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="capp.tournament",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BallEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("over", models.IntegerField()),
                ("ball_in_over", models.IntegerField()),
                ("batsman", models.CharField(max_length=100)),
                ("batsman_id", models.PositiveIntegerField(blank=True, null=True)),
                ("bowler_id", models.PositiveIntegerField(blank=True, null=True)),
                ("fielder_id", models.PositiveIntegerField(blank=True, null=True)),
                ("bowler", models.CharField(max_length=100)),
                ("runs", models.IntegerField(default=0)),
                ("is_catch", models.BooleanField(default=False)),
                ("is_wicket", models.BooleanField(default=False)),
                ("out_of_box", models.BooleanField(default=False)),
                ("is_runout", models.BooleanField(default=False)),
                ("fielder", models.CharField(blank=True, max_length=100, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "innings",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "First"), (2, "Second")], default=1
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balls",
                        to="capp.match",
                    ),
                ),
            ],
            options={
                "ordering": ["match", "over", "ball_in_over"],
                "indexes": [
                    models.Index(
                        fields=["batsman"], name="capp_ballev_batsman_693733_idx"
                    ),
                    models.Index(
                        fields=["bowler"], name="capp_ballev_bowler_a8c066_idx"
                    ),
                    models.Index(
                        fields=["fielder"], name="capp_ballev_fielder_906a51_idx"
                    ),
                    models.Index(
                        fields=["is_wicket"], name="capp_ballev_is_wick_fed4ac_idx"
                    ),
                    models.Index(
                        fields=["is_catch"], name="capp_ballev_is_catc_eb1428_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TournamentStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matches_played", models.PositiveIntegerField(default=0)),
                ("matches_won", models.PositiveIntegerField(default=0)),
                ("matches_lost", models.PositiveIntegerField(default=0)),
                ("matches_drawn", models.PositiveIntegerField(default=0)),
                ("points", models.PositiveIntegerField(default=0)),
                ("net_run_rate", models.FloatField(default=0.0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="capp.team"
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to="capp.tournament",
                    ),
                ),
            ],
            options={
                "ordering": ["-points", "-net_run_rate"],
                "unique_together": {("tournament", "team")},
            },
        ),
    ]
